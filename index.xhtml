<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:widget="http://www.netvibes.com/ns/">
    <head>

        <!-- Application Metas -->
        <title>Andre's Widget</title>
        <meta name="author" content="Andre Ambrosio" />
        <meta name="description" content="This widget will soon do something" />

        <!-- Application Standalone emulation files -->
        <link rel="stylesheet" type="text/css"
            href="http://uwa.netvibes.com/lib/c/UWA/assets/css/standalone.css" />
        <script type="text/javascript"
            src="http://uwa.netvibes.com/lib/c/UWA/js/UWA_Standalone_Alone.js"></script>
        
        <!-- Application Preferences -->
        <widget:preferences>
            <widget:preference name="hellowho" type="text" label="Hello who ?" defaultValue="JC"></widget:preference>
        </widget:preferences>

        <!-- Application JavaScript Source -->
        <!-- Application JavaScript Source -->
        <script type="text/javascript">
        //<![CDATA[

            /*
                We create the global MyWidget object (it could be any other name).
                This object will be used to store variables and functions.
            */
            var MyWidget = {
                
                whoElement: null,

                /*
                    The onLoad() function is the first one,
                    it will be triggered by widget "onLoad" event.
                */
                onLoad: function() {

                    // Use widget.setBody() to replace the content of the body element
                    // in order to initialize the layout of your app
                    widget.setBody({
                        tag: 'h1',
                        text: 'My App Title'
                    });

                    // Inject whoElement into the body
                    MyWidget.whoElement = widget.createElement('p').inject(widget.body);

                    // Update whoElement
                    MyWidget.updateWho();
                },

                /*
                    The onRefresh() function is the second one,
                    it will be triggered by the widget "onRefresh" event.
                */
                onRefresh: function() {

                    MyWidget.updateWho();
                },

                updateWho: function () {

                    var who = widget.getValue('hellowho');

                    // widget.setBody() replaces the content of the body element
                    MyWidget.whoElement.setText('Hello ' + who + '!');
                }
            };

             /*
                The "onLoad" event is triggered when the widget is loaded and
                "onRefresh" when the preferences are validated.

                Here, we add the MyWidget.onLoad() and MyWidget.onRefresh() functions
                as "onLoad" and "onRefresh" event listeners on the widget.
            */
            widget.addEvents({
                onLoad: MyWidget.onLoad,
                onRefresh: MyWidget.onRefresh,
            });

        //]]>
        </script>
      </head>
      <body>
            <p>Loading...</p>
      </body>
</html>